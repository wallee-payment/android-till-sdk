image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.3"
  ANDROID_SDK_TOOLS: "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -q -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - deploy

# Job to build Javadoc
build_javadoc:
  stage: build
  script:
    - ./gradlew javadoc
  artifacts:
    paths:
      - sdk/build/docs/javadoc

# Job to deploy Javadoc to GitLab Pages
pages:
  stage: deploy
  script:
    - echo Listing current directory
    - ls -l
    - echo "Listing build/docs/javadoc directory"
    - ls -l sdk/build/docs/javadoc
    - mkdir -p public
    - cp -r sdk/build/docs/javadoc/* public/
    - echo "Listing public directory"
    - ls -l public
  artifacts:
    paths:
      - public

# Original deploy job
deploy:
  #image: gradle:6.5-jdk11
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - touch ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - echo $GITLAB_SSH_DEPLOYMENT_KEY | base64 --decode > ~/.ssh/id_rsa
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
  script:
    - SDK_VERSION=$(grep -E "sdkVersion = " sdk/build.gradle | cut -d "\"" -f2)
    - BRANCH=$CI_COMMIT_REF_NAME
    - echo "publishing $SDK_VERSION for branch $BRANCH"
    - ./gradlew publish -Pbranch=$BRANCH
    - echo "creating version tag for $SDK_VERSION"
    - ./version.sh $BRANCH $SDK_VERSION
    #- rm -rf ~/.ssh
  only:
    - master
    - dev