image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.3"
  ANDROID_SDK_TOOLS: "4333796"
  ANDROID_HOME: "$CI_PROJECT_DIR/android-sdk-linux"
  ANDROID_SDK_ROOT: "$CI_PROJECT_DIR/android-sdk-linux"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -q -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - tag



# Job to create a Git tag with the SDK version
create_tag:
  stage: tag
  before_script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - touch ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - echo "$GITLAB_SSH_DEPLOYMENT_KEY" | base64 --decode > ~/.ssh/id_rsa
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
  script:
    - |
      sdkVersion=$(grep -E "sdkVersion = " sdk/build.gradle | cut -d '"' -f2)
      echo "Creating tag with SDK version: ${sdkVersion}"
      git tag -a "v${sdkVersion}" -m "Release ${sdkVersion}"
      git remote set-url origin git@gitlab.com:$CI_PROJECT_PATH
      git push origin "v${sdkVersion}"
  dependencies: []
